Vimderp
Making Vim a little less derpy
2 Apr 2015
Tags: 

Daniel Hess
dhess@monsooncommerce.com
dan@danielhess.me
http://monsooncommerce.com
@dan9186


* Religious Wars
_"Learn_an_editor_that_suits_your_needs_really_well,_don't_take_any_s#!t_from_anyone_who_tells_you_it's_terrible,_and_always_be_open_to_new_tools."_
[[https://twitter.com/joepferguson][@joepferguson]]

* Vi vs Vim


* Vi
The visual mode of the line editor *ex*

- common place on most Unix systems
- relevant for when you shell into a box

* Vim
Stands for *Vi*IMproved*
Vim is considered to be a superset of Vi

- support for syntax highlighting, code folding
- multilevel undo/redo
- screen splitting
- edit files inside a compressed archive
- built in diff (vimdiff)
- support for plugins


* Modus Operandi

* Modes

_Normal_
- default or initial mode
- case sensative, but do similar actions
- not echoed to the screen
- do not require `ENTER` after a command

_Insert_
- add and edit all the text you want
- enter by using command mode actions
- not always needed to change text

_Visual_
- select lines or blocks of text

_Command_
- more complex line editing commands
- can issue shell commands

* Keep These in Mind
As you learn shortcuts, you will transfer more of the editing work to computer

When in doubt press ESC

The concept of the current mode is fundamental 

Vim is not a WYSIWYG, consider LaTeX for that

* Two Different Keyboards

.image img/vim-normal-mode.png

* Follow The Patern

There are a few exceptions, but gennerally speaking all tasks follow the same pattern

Most commands you can preceed with a number to multiple the action


* Navigation

* Directing The Cursor
You can use the arrow keys, backspace, and enter, but they are out of the way

Left

	h

Down

	j

Up

	k

Right

	l



* Editing Text

* Deleting
	current word
	remainder of line
	current line
	N lines

* Moving
	paste
		before cursor
		after cursor

* Copying
	current line
	N lines

* Selecting
Also know as visual mode
	line-mode
	column-mode

* Entering Insert Mode

Insert, starts editing at the cursors current location

	i

Append, starts editing one space after the cursor

	a

Open, opens a new line and starts editing

	o

*NOTE:*Don't*forget*about*the*capital*versions!*


* Searching

* The Next One
You must always be normal mode to use searching

The next occurrance

	n

The previous occurrance

	N

The first occurrance

	ggn

The last occurrance

	GN

* Basic Searching
Searching forward:

	/StringToMatch

Searching backward:

	?StringToMatch

Add a _\c_ to do a case insensitive searching

* Current Word
Match the word at the cursor

Searching forward:

	*

Searching backward:

	#



* HERE BE DRAGONS

* It's A Trap

Depending on the type of terminal you are using, backspace may erase what you've previously typed or may just back up


* Commands

* Executing Commands

Executing Ex Commands

	:command

Send command back to the shell

	:!go test


* Customizing

* Using With Golang
	go syntax hilighting
	godef go to definition
	syntastic/pathogen
	auto-complete
	tabs/tabedit


* Saving

* The Buffer

Never editing a live file, always working on a temporary file loadded into a buffer

Changes do not affect the original file until saved

* Slides available on GitHub

.link http://slides.danielhess.me
